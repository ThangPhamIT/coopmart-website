{"version":3,"sources":["images/favicon.ico","images/logo.png","types/types.js","api/api.js","actions/authenticate.js","components/header/Header.js","components/utils/Constants.js","components/pages/HomePage.js","components/messages/InlineError.js","components/utils/Department.js","components/forms/LoginForm.js","components/pages/LoginPage.js","components/utils/Collection.js","components/timer/Timer.js","components/templates/Questions.js","components/pages/DashboardPage.js","actions/users.js","components/forms/SignupForm.js","components/pages/SignupPage.js","components/routes/UserRoute.js","components/routes/GuestRoute.js","App.js","serviceWorker.js","reducers/user.js","reducers/rootReducer.js","store/store.js","index.js","images/logocoopmartvn.png"],"names":["module","exports","__webpack_require__","p","USER_LOGGED_IN","USER_LOGGED_OUT","USER_SUBMIT_RESULT","api","login","credentials","axios","post","then","res","data","user","signup","sendResult","test","userLoggedIn","type","logout","dispatch","console","log","localStorage","removeItem","Header","react_default","a","createElement","Card","className","src","logo","alt","width","height","React","Component","USER_NAME_CAN_NOT_BE_EMPTY","DEPARTMENT_CAN_NOT_BE_EMPTY","TIME_UP","connect","state","isAuthenticated","token","actions","_ref","components_header_Header","Content","Image","size","Button","primary","onClick","Link","to","InlineError","text","style","color","DEPARTMENTS","value","image","avatar","LoginForm","username","department","loading","errors","onChange","e","_this","setState","Object","objectSpread","defineProperty","target","name","onSelectDepartment","_","onSubmit","validate","keys","length","props","submit","catch","err","response","_this$state","this","Form","global","Message","negative","Field","error","htmlFor","id","placeholder","messages_InlineError","Dropdown","fluid","selection","options","LoginPage","history","push","forms_LoginForm","bookwormJWT","bookwormUser","bookwormTest","submitTest","freeze","IT_QUESTIONS","question","answers","SALE_QUESTIONS","Timer","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","nf","n","convertSecond","second","min","Math","floor","sec","notifyEndingTime","isTimeUp","endingTime","time","counter","_this2","interval","setInterval","currentTime","clearInterval","QUESTIONS","Questions","answer_1","answer_2","answer_3","answer_4","answer_5","answer_6","answer_7","question_answer","map","ques","index","item","answer","information","testing","endingTimeMessage","document","getElementById","undefined","innerHTML","setTimeout","replace","Collection","ans","position","Description","key","aria-hidden","components_timer_Timer","DashboardPage","components_templates_Questions","userSubmitResult","SignupForm","preventDefault","SignupPage","forms_SignupForm","component","rest","objectWithoutProperties","Route","assign","render","Redirect","App","location","Switch","path","exact","HomePage","GuestRoute","routes_UserRoute","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","initialState","rootReducer","combineReducers","arguments","action","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","BrowserRouter","es","URL","process","origin","addEventListener","concat","fetch","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.ff0c5f35.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/favicon.0a06c2d8.ico\";","module.exports = __webpack_public_path__ + \"static/media/logo.136311d2.png\";","export const USER_LOGGED_IN = 'USER_LOGGED_IN';\r\nexport const USER_LOGGED_OUT = 'USER_LOGGED_OUT';\r\nexport const USER_SUBMIT_RESULT = 'USER_SUBMIT_RESULT';","import axios from 'axios';\r\n\r\nexport default {\r\n    user: {\r\n        login: credentials =>\r\n            axios.post(\"https://coopmart-api.herokuapp.com/api/authenticate\", { credentials }).then(res => res.data.user),\r\n        signup: user => \r\n            axios.post(\"https://coopmart-api.herokuapp.com/api/users\", { user }).then(res => res.data.user),\r\n        sendResult: test => \r\n            axios.post(\"https://coopmart-api.herokuapp.com/api/users/submitTest\", { test }).then(res => res.data.user)\r\n    }\r\n};","import {\r\n    USER_LOGGED_IN,\r\n    USER_LOGGED_OUT\r\n} from \"../types/types\";\r\nimport api from '../api/api';\r\n\r\nexport const userLoggedIn = user => ({\r\n    type: USER_LOGGED_IN,\r\n    user\r\n});\r\n\r\nexport const userLoggedOut = () => ({\r\n    type: USER_LOGGED_OUT\r\n});\r\n\r\nexport const login = credentials => dispatch => \r\n    api.user.login(credentials).then(user => {\r\n        console.log('result login: ', user)\r\n        localStorage.bookwormJWT = user.token;\r\n        localStorage.bookwormUser = user.username;\r\n        localStorage.bookwormTest = user.submitTest;\r\n        localStorage.department = user.department;\r\n        dispatch(userLoggedIn(user));\r\n    });\r\n\r\nexport const logout = () => dispatch => {\r\n    console.log('logout');\r\n    localStorage.removeItem('bookwormJWT');\r\n    localStorage.removeItem('bookwormUser');\r\n    localStorage.removeItem('bookwormTest');\r\n    localStorage.removeItem('department');\r\n    dispatch(userLoggedOut());\r\n};","import React from 'react';\r\nimport { Card } from 'semantic-ui-react';\r\n\r\nimport logo from '../../images/logo.png';\r\nimport './Header.css';\r\n\r\nclass Header extends React.Component {\r\n    render() {\r\n        return (\r\n            <Card className=\"navbar nav-background\">\r\n                <div className=\"navbar-brand justify-content\">\r\n                    <div className=\"navbar-item\">\r\n                        <img src={logo} alt=\"Co.opmart\" width=\"80\" height=\"75\"/>\r\n                        <div className='header-title'>\r\n                            <label className='header-co-op'>co.op</label><label className='header-mart'>mart</label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;","const WELCOME_TO_MINI_TEST = 'COOPMART MINI TEST ONLINE';\r\nconst SIGN_UP = 'ĐĂNG KÝ';\r\nconst LOGIN = 'ĐĂNG NHẬP';\r\nconst LOGOUT = 'THOÁT';\r\n\r\nconst PLEASE_ENTER_YOUR_FULL_NAME = 'VUI LÒNG ĐIỀN HỌ VÀ TÊN';\r\nconst FULL_NAME_PLACE_HOLDER = 'NGUYỄN VĂN A';\r\nconst USER_NAME_CAN_NOT_BE_EMPTY = 'HỌ VÀ TÊN KHÔNG ĐƯỢC ĐỂ TRỐNG';\r\nconst PLEASE_SELECT_YOUR_DEPARTMENT = 'VUI LÒNG LỰA CHỌN BỘ PHẬN BẠN LÀM VIỆC';\r\nconst DEPARTMENT_CAN_NOT_BE_EMPTY = 'BỘ PHẬN BẠN LÀM VIỆC KHÔNG ĐƯỢC ĐỂ TRỐNG';\r\n\r\nconst INVALID_CREDENTIALS = 'ĐĂNG NHẬP KHÔNG THÀNH CÔNG';\r\nconst CONGRATULATIONS = 'XIN CHÚC MỪNG';\r\nconst DONE_TEST_EXAM = 'BẠN ĐÃ HOÀN THÀNH BÀI TEST';\r\n\r\nconst BEFORE_TIME_UP = 'THỜI GIAN LÀM BÀI CÒN 2 PHÚT';\r\nconst TIME_UP = 'HẾT GIỜ LÀM BÀI';\r\nconst SUBMIT_TEST = 'NỘP BÀI';\r\n\r\nconst QUESTION = 'CÂU HỎI';\r\nconst PLEASE_TRY_AGAIN = 'VUI LÒNG THỬ LẠI';\r\n\r\nexport {\r\n    WELCOME_TO_MINI_TEST,\r\n    SIGN_UP,\r\n    LOGIN,\r\n    LOGOUT,\r\n    PLEASE_ENTER_YOUR_FULL_NAME,\r\n    FULL_NAME_PLACE_HOLDER,\r\n    USER_NAME_CAN_NOT_BE_EMPTY,\r\n    INVALID_CREDENTIALS,\r\n    CONGRATULATIONS,\r\n    DONE_TEST_EXAM,\r\n    BEFORE_TIME_UP,\r\n    TIME_UP,\r\n    SUBMIT_TEST,\r\n    QUESTION,\r\n    PLEASE_TRY_AGAIN,\r\n    PLEASE_SELECT_YOUR_DEPARTMENT,\r\n    DEPARTMENT_CAN_NOT_BE_EMPTY\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../actions/authenticate';\r\nimport Header from '../header/Header';\r\nimport { Card, Image, Button } from 'semantic-ui-react';\r\nimport logo from '../../images/logocoopmartvn.png';\r\nimport './Page.css';\r\nimport { WELCOME_TO_MINI_TEST, SIGN_UP, LOGIN, LOGOUT, PLEASE_TRY_AGAIN } from '../utils/Constants';\r\n\r\nconst HomePage = ({ isAuthenticated, logout }) => (\r\n    <div className=\"homepage\">\r\n        <Header/>\r\n        { isAuthenticated ? (\r\n            <center>\r\n                <Card className=\"homepage-card-login\">\r\n                <Card.Content>\r\n                    <Image size='mini' src={logo} className='homepage-img-content-coop'/>\r\n                    <div className='homepage-welcome'>{ PLEASE_TRY_AGAIN }</div> \r\n                <Button primary onClick={() => logout()}>{ LOGOUT }</Button>\r\n                </Card.Content>\r\n            </Card>\r\n            </center>\r\n        ) : (\r\n            <center>\r\n                <Card className=\"homepage-card-login\">\r\n                <Card.Content>\r\n                    <Image size='mini' src={logo} className='homepage-img-content-coop'/>\r\n                </Card.Content>\r\n                <div className='homepage-welcome'>{ WELCOME_TO_MINI_TEST }</div>\r\n                <Link to=\"/signup\" className='homepage-welcome-sign-up'>{SIGN_UP}</Link> \r\n                or\r\n                <Link to=\"/login\" className='homepage-welcome-login'>{LOGIN}</Link>\r\n            </Card>\r\n            </center>\r\n        ) }\r\n    </div>\r\n);\r\n\r\nHomePage.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    logout: PropTypes.func.isRequired\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        isAuthenticated: !!state.user.token\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { logout: actions.logout })(HomePage);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst InlineError = ({text}) => (\r\n    <span style={{color:'#ae5856'}}>{text}</span>\r\n);\r\n\r\nInlineError.propTypes = {\r\n    text: PropTypes.string.isRequired\r\n};\r\n\r\nexport default InlineError;","import logo from '../../images/favicon.ico';\r\n\r\nconst DEPARTMENTS = [\r\n    {\r\n        text: 'IT',\r\n        value: 'IT',\r\n        image: { avatar: true, src: logo },\r\n    },\r\n    {\r\n        text: 'SALES',\r\n        value: 'SALES',\r\n        image: { avatar: true, src: logo },\r\n    }\r\n]\r\n\r\nexport {\r\n    DEPARTMENTS\r\n }\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Form, Button, Message, Card, Dropdown } from \"semantic-ui-react\";\r\nimport InlineError from \"../messages/InlineError\";\r\nimport { \r\n    PLEASE_ENTER_YOUR_FULL_NAME, \r\n    LOGIN, \r\n    FULL_NAME_PLACE_HOLDER, \r\n    INVALID_CREDENTIALS,\r\n    PLEASE_SELECT_YOUR_DEPARTMENT,\r\n    USER_NAME_CAN_NOT_BE_EMPTY,\r\n    DEPARTMENT_CAN_NOT_BE_EMPTY } from \"../utils/Constants\";\r\n\r\nimport { DEPARTMENTS } from \"../utils/Department\";    \r\n\r\nclass LoginForm extends React.Component {\r\n    state = {\r\n        data: {\r\n            username: '',\r\n            department: '',\r\n        },\r\n        loading: false,\r\n        errors: {}\r\n    };\r\n\r\n    onChange = e => this.setState({\r\n        data: { ...this.state.data, [e.target.name]: e.target.value }\r\n    });\r\n\r\n    onSelectDepartment = (_, { value } ) => this.setState((state) => ({\r\n        data: { ...state.data, department: value }\r\n    }));\r\n\r\n    onSubmit = () => {\r\n        const errors = this.validate(this.state.data);\r\n        \r\n        this.setState({ errors });\r\n        if (Object.keys(errors).length === 0) {\r\n            this.setState({ loading: true });\r\n            console.log('login', this.state.data)\r\n            this.props\r\n                .submit(this.state.data)\r\n                .catch(err =>\r\n                    this.setState({ errors: err.response.data.errors, loading: false })\r\n                );\r\n        }\r\n    };\r\n\r\n    validate = data => {\r\n        const errors = {};\r\n        if (!data.username) errors.username = USER_NAME_CAN_NOT_BE_EMPTY;\r\n        if (!data.department) errors.department = DEPARTMENT_CAN_NOT_BE_EMPTY;\r\n        return errors;\r\n    };\r\n\r\n    render() {\r\n        const { data, errors, loading } = this.state;\r\n\r\n        return (\r\n            <center>\r\n                <Card className=\"homepage-card-login\">\r\n                <Card.Content>\r\n                    <Form onSubmit={this.onSubmit} loading={loading}>\r\n                        {errors.global && (\r\n                            <Message negative>\r\n                                <Message.Header>{INVALID_CREDENTIALS}</Message.Header>\r\n                                <p>{errors.global}</p>\r\n                            </Message>\r\n                        )}\r\n                        <Form.Field error={!!errors.username}>\r\n                            <label htmlFor=\"username\" className='login-title-name'>{PLEASE_ENTER_YOUR_FULL_NAME}</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"username\"\r\n                                name=\"username\"\r\n                                placeholder={FULL_NAME_PLACE_HOLDER}\r\n                                value={data.username}\r\n                                onChange={this.onChange}\r\n                            />\r\n                            {errors.username && <InlineError text={errors.username} />}\r\n                        </Form.Field>\r\n\r\n                        <Form.Field error={errors && !!errors.department}>\r\n                            <Dropdown \r\n                                placeholder={ PLEASE_SELECT_YOUR_DEPARTMENT }\r\n                                fluid \r\n                                selection\r\n                                name=\"department\"\r\n                                options={ DEPARTMENTS } \r\n                                onChange={ this.onSelectDepartment }\r\n                            />\r\n                            {errors && errors.department && <InlineError text={errors.department} />}\r\n                        </Form.Field>\r\n\r\n                        <Button primary className='login-button'>{LOGIN}</Button>\r\n                    </Form>\r\n                </Card.Content>\r\n             </Card>\r\n            </center>\r\n        );\r\n    }\r\n}\r\n\r\nLoginForm.propTypes = {\r\n    submit: PropTypes.func.isRequired\r\n};\r\n\r\nexport default LoginForm;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport LoginForm from '../forms/LoginForm';\r\nimport { login } from '../../actions/authenticate';\r\nimport Header from '../header/Header';\r\n\r\nclass LoginPage extends React.Component {\r\n\r\n    submit = data => this.props.login(data).then(() => this.props.history.push('/dashboard'));\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header />>\r\n                <LoginForm submit={this.submit}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nLoginPage.propTypes = {\r\n    history: PropTypes.shape({\r\n        push: PropTypes.func.isRequired\r\n    }).isRequired,\r\n    login: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, { login })(LoginPage);","const IT_QUESTIONS = [\r\n    {\r\n        question: \"1 + 2 = \",\r\n        answers: [\r\n            \"A. 3\",\r\n            \"B. 40\",\r\n            \"C. 2\",\r\n            \"D. 4\"\r\n        ]\r\n    },\r\n    {\r\n        question: \"https://bulma.io/documentation/elements/table/ \",\r\n        answers: [\r\n            \"A. Website\",\r\n            \"B. Page\",\r\n            \"C. link\",\r\n            \"D. 4\"\r\n        ]\r\n    },\r\n    {\r\n        question: \"1 + 2 = \",\r\n        answers: [\r\n            \"A. 3\",\r\n            \"B. 40\",\r\n            \"C. 2\",\r\n            \"D. 4\"\r\n        ]\r\n    },\r\n    {\r\n        question: \"1 + 2 = \",\r\n        answers: [\r\n            \"A. 3\",\r\n            \"B. 40\",\r\n            \"C. 2\",\r\n            \"D. 4\"\r\n        ]\r\n    },\r\n    {\r\n        question: \"Notpade++ is a software \",\r\n        answers: [\r\n            \"A. True\",\r\n            \"B. False\"\r\n        ]\r\n    }\r\n];\r\n\r\nconst SALE_QUESTIONS = [\r\n    {\r\n        question: \"https://bulma.io/documentation/elements/table/ \",\r\n        answers: [\r\n            \"A. Website\",\r\n            \"B. Page\",\r\n            \"C. link\",\r\n            \"D. 4\"\r\n        ]\r\n    },\r\n    {\r\n        question: \"1 + 2 = \",\r\n        answers: [\r\n            \"A. 3\",\r\n            \"B. 40\",\r\n            \"C. 2\",\r\n            \"D. 4\"\r\n        ]\r\n    },\r\n    {\r\n        question: \"How many categories for spoon? \",\r\n        answers: [\r\n            \"A. 122\",\r\n            \"B. 677\",\r\n            \"C. 500\",\r\n            \"D: 100\"\r\n        ]\r\n    },\r\n];\r\n\r\nexport default Object.freeze({\r\n    IT_QUESTIONS,\r\n    SALE_QUESTIONS\r\n})","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Timer.css';\r\n\r\n//let counter = 0;\r\nlet timeLeft = 180;\r\n\r\nclass Timer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            time: '',\r\n            counter: 0\r\n        }\r\n    }\r\n\r\n     nf = (n) => {\r\n        return n > 9 ? \"\" + n : \"0\" + n;\r\n    };\r\n\r\n     convertSecond = (second) => {\r\n        let min = Math.floor(second/60);\r\n        let sec = second % 60;\r\n        return this.nf(min) + ':' + this.nf(sec);\r\n    };\r\n\r\n    componentWillMount() {\r\n        let { counter } = this.state;\r\n        let interval = setInterval(() => {\r\n            this.setState({counter: counter++});\r\n            var currentTime = this.convertSecond(timeLeft - counter); \r\n            this.setState({time : currentTime});\r\n            if ((timeLeft - counter) === 120) {\r\n                this.notifyEndingTime(false);\r\n            }\r\n\r\n            if ((timeLeft - counter) === 10) {\r\n                this.notifyEndingTime(true);\r\n            }\r\n\r\n            if (counter === timeLeft) {\r\n                this.endingTime();\r\n                clearInterval(interval);\r\n                counter = 0;\r\n            }\r\n        }, 1000);\r\n    }\r\n\r\n    notifyEndingTime = (isTimeUp) => {\r\n        this.props.notifyEndingTime(isTimeUp);\r\n    };\r\n\r\n    endingTime = () => {\r\n        this.props.endingTime();\r\n    }\r\n\r\n    render() {\r\n        const { time } = this.state;\r\n        return(\r\n            <span className='time'>{time}</span>\r\n        );\r\n    }\r\n}\r\n\r\nTimer.propTypes = {\r\n    endingTime: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Timer;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { Form, Button, Card } from 'semantic-ui-react';\r\nimport { BEFORE_TIME_UP, SUBMIT_TEST, QUESTION, TIME_UP } from '../utils/Constants';\r\nimport Collection from '../utils/Collection';\r\nimport './Questions.css';\r\nimport Timer from '../timer/Timer';\r\n\r\nlet QUESTIONS = [];\r\nclass Questions extends React.Component {\r\n    state = {\r\n        data: {\r\n            answer_1: '',\r\n            answer_2: '',\r\n            answer_3: '',\r\n            answer_4: '',\r\n            answer_5: '',\r\n            answer_6: '',\r\n            answer_7: '',\r\n        },\r\n        loading: false,\r\n        errors: {},\r\n        department: this.props,\r\n    }\r\n\r\n    onChange = e => this.setState({\r\n        ...this.state,\r\n        data: { ...this.state.data, [e.target.name]: e.target.value }\r\n    });\r\n\r\n    onClick = () => {\r\n        this.setState({ loading: true });\r\n        let question_answer = [];\r\n        QUESTIONS.map((ques, index) => {\r\n            let item = {question: ques.question, answer: this.state.data['answer_' + (index + 1)]}\r\n            question_answer.push(item);\r\n            return question_answer;\r\n        });\r\n        const information = {\r\n            username: this.props.username,\r\n            department: this.props.department,\r\n            testing: question_answer\r\n        }\r\n        console.log('information test: ', information);\r\n        this.props\r\n            .submit(information);\r\n    };\r\n\r\n    notifyEndingTime = (isTimeUp) => {\r\n        var endingTimeMessage = document.getElementById('endingTimeMessage');\r\n        if (endingTimeMessage !== null && endingTimeMessage !== undefined) {\r\n            if (isTimeUp) {\r\n                endingTimeMessage.innerHTML = TIME_UP;\r\n            }\r\n            endingTimeMessage.className = \"show\";\r\n            setTimeout(() => {\r\n                endingTimeMessage.className = endingTimeMessage.className.replace(\"show\", \"\")\r\n            }, 5000);\r\n        }\r\n    };\r\n\r\n    componentWillMount() {\r\n        console.log('department will: ', this.props.department);\r\n        switch(this.props.department) {\r\n            case 'IT':\r\n                return QUESTIONS = Collection.IT_QUESTIONS;\r\n            case 'SALES':\r\n                return QUESTIONS = Collection.SALE_QUESTIONS;\r\n            default:\r\n                return QUESTIONS = Collection.IT_QUESTIONS;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { username } = this.props;\r\n        const { loading } = this.state;\r\n        \r\n        let question = QUESTIONS.map((item, index) => {\r\n            let answer = item.answers.map((ans, position) => {\r\n                return (<Card.Description key={position + 1}>\r\n                    <input type=\"radio\" value={ans} name={`answer_` + (index + 1)} onChange={this.onChange}/>\r\n                    <label htmlFor={position + 1}> {ans}</label>\r\n                </Card.Description>)\r\n            });\r\n            return (\r\n                <Card key={index} id={index}>\r\n                     <Card.Content className='question'>{ QUESTION } {index + 1}:&nbsp; &nbsp; {item.question} </Card.Content>\r\n                    <div className='answer-question'>\r\n                       {answer}\r\n                    </div>\r\n                </Card>\r\n            )\r\n        })\r\n\r\n        return (\r\n            <div className='question-content'>\r\n                <div className='hello-user-test'> \r\n                    <span className='hello-user'><i className=\"fa fa-user-circle\" aria-hidden=\"true\"></i> {username} &nbsp; &nbsp; &nbsp;</span>\r\n                    <span><Timer endingTime={this.onClick} notifyEndingTime={this.notifyEndingTime}/></span>\r\n                </div>\r\n                <div id=\"endingTimeMessage\">{ BEFORE_TIME_UP }</div>\r\n                <Card>\r\n                    <Card.Content>\r\n                        <Form loading={loading}>\r\n                            {question}\r\n                            <center>\r\n                            <Button primary onClick={this.onClick}>{ SUBMIT_TEST }</Button>\r\n                            </center>\r\n                        </Form>\r\n                    </Card.Content>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        username: state.user.username,\r\n        department: state.user.department\r\n    }\r\n}\r\n\r\nQuestions.propTypes = {\r\n    notifyEndingTime: PropTypes.func\r\n}\r\n\r\nexport default connect(mapStateToProps, { })(Questions);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Questions from '../templates/Questions';\r\nimport { sendResult } from '../../actions/users';\r\nimport { Button, Card, Image } from 'semantic-ui-react';\r\nimport { logout } from '../../actions/authenticate';\r\nimport Header from '../header/Header';\r\nimport { CONGRATULATIONS, DONE_TEST_EXAM, LOGOUT } from '../utils/Constants';\r\nimport logo from '../../images/logocoopmartvn.png';\r\n\r\n\r\nclass DashboardPage extends React.Component {\r\n    \r\n    submit = data => this.props.sendResult(data);\r\n\r\n    logout = () => this.props.logout();\r\n\r\n    render() {\r\n        const { submitTest } = this.props;\r\n        return (\r\n            <div>\r\n                <Header />\r\n                { submitTest ? \r\n                 <center>\r\n                    <Card className=\"homepage-card-login\">\r\n                        <Card.Content>\r\n                            <Image size='mini' src={logo} className='homepage-img-content-coop'/>\r\n                            <div className='dashboard-congratulations'>{ CONGRATULATIONS }</div>\r\n                            <div className='dashboard-done-test-exam'>{ DONE_TEST_EXAM }</div>\r\n                            <Button primary onClick={() => this.logout() }>{ LOGOUT }</Button>\r\n                        </Card.Content>\r\n                    </Card>\r\n                </center> : (<Questions submit={this.submit}/>)}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDashboardPage.propTypes = {\r\n    history: PropTypes.shape({\r\n        push: PropTypes.func.isRequired\r\n    }).isRequired,\r\n    sendResult: PropTypes.func.isRequired,\r\n    logout: PropTypes.func.isRequired\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        submitTest: state.user.submitTest\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { sendResult, logout })(DashboardPage);","import {\r\n    USER_SUBMIT_RESULT\r\n} from \"../types/types\";\r\nimport api from '../api/api';\r\n\r\nimport { userLoggedIn } from \"./authenticate\";\r\n\r\nexport const userSubmitResult = test => ({\r\n    type: USER_SUBMIT_RESULT,\r\n    user: test\r\n});\r\n\r\nexport const signup = data => dispatch => \r\n    api.user.signup(data).then(user => {\r\n        console.log('action signup', user);\r\n        localStorage.bookwormJWT = user.token;\r\n        localStorage.bookwormUser = user.username;\r\n        localStorage.department = user.department;\r\n        dispatch(userLoggedIn(user));\r\n    });\r\n\r\nexport const sendResult = data => dispatch => {\r\n    console.log('send Result ', data);\r\n    api.user.sendResult(data).then(test => {\r\n        console.log('response result ', test);\r\n        localStorage.bookwormTest = test.submitTest;\r\n        dispatch(userSubmitResult(test));\r\n    })};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Form, Button, Card, Dropdown } from 'semantic-ui-react';\r\nimport InlineError from \"../messages/InlineError\";\r\nimport { \r\n    PLEASE_ENTER_YOUR_FULL_NAME, \r\n    FULL_NAME_PLACE_HOLDER, \r\n    SIGN_UP,\r\n    PLEASE_SELECT_YOUR_DEPARTMENT,\r\n    USER_NAME_CAN_NOT_BE_EMPTY,\r\n    DEPARTMENT_CAN_NOT_BE_EMPTY } from '../utils/Constants';\r\n\r\nimport { DEPARTMENTS } from \"../utils/Department\";        \r\nimport './Form.css';\r\n\r\nclass SignupForm extends React.Component {\r\n    state = {\r\n        data: {\r\n            username: '',\r\n            department: '',\r\n        },\r\n        loading: false,\r\n        errors: {}\r\n    };\r\n\r\n    onChange = e => this.setState({\r\n        ...this.state,\r\n        data: { ...this.state.data, [e.target.name]: e.target.value }\r\n    });\r\n\r\n    onSelectDepartment = (_, { value } ) => this.setState((state) => ({\r\n        data: { ...state.data, department: value }\r\n    }));\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        const errors = this.validate(this.state.data);\r\n        this.setState({ errors });\r\n\r\n        if (Object.keys(errors).length === 0) {\r\n            console.log('sign up: ', this.state.data);\r\n            this.setState({ loading: true });\r\n            this.props\r\n                .submit(this.state.data)\r\n                .catch(err =>\r\n                    this.setState({ errors: err.response.data.errors, loading: false })\r\n                );\r\n        }\r\n    };\r\n\r\n    validate = data => {\r\n        const errors = {};\r\n        if (!data.username) errors.username = USER_NAME_CAN_NOT_BE_EMPTY;\r\n        if (!data.department) errors.department = DEPARTMENT_CAN_NOT_BE_EMPTY;\r\n        return errors;\r\n    };\r\n\r\n    render() {\r\n        const { data, errors, loading } = this.state;\r\n        return (\r\n            <center>\r\n                <Card className=\"homepage-card-login\">\r\n                <Card.Content>\r\n                    <Form onSubmit={this.onSubmit} loading={loading}>\r\n                        <Form.Field error={errors && !!errors.username}>\r\n                            <label htmlFor=\"username\" className='sign-up-title-name'>{PLEASE_ENTER_YOUR_FULL_NAME}</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"username\"\r\n                                name=\"username\"\r\n                                placeholder={ FULL_NAME_PLACE_HOLDER }\r\n                                value={ data.username }\r\n                                onChange={ this.onChange }\r\n                            />\r\n                            {errors && errors.username && <InlineError text={errors.username} />}\r\n                        </Form.Field>\r\n\r\n                        <Form.Field error={errors && !!errors.department}>\r\n                            <Dropdown \r\n                                placeholder={ PLEASE_SELECT_YOUR_DEPARTMENT }\r\n                                fluid \r\n                                selection\r\n                                name=\"department\"\r\n                                options={ DEPARTMENTS } \r\n                                onChange={ this.onSelectDepartment }\r\n                            />\r\n                            {errors && errors.department && <InlineError text={errors.department} />}\r\n                        </Form.Field>\r\n\r\n                        <Button primary className='sign-up-button'>{SIGN_UP}</Button>\r\n                    </Form>\r\n                </Card.Content>\r\n             </Card>\r\n            </center>\r\n        );\r\n    }\r\n}\r\n\r\nSignupForm.propTypes = {\r\n    submit: PropTypes.func.isRequired\r\n};\r\n\r\nexport default SignupForm;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport SignupForm from '../forms/SignupForm';\r\nimport { signup } from '../../actions/users'\r\nimport Header from '../header/Header';\r\n\r\nclass SignupPage extends React.Component {\r\n\r\n    submit = data => this.props.signup(data).then(() => this.props.history.push('/dashboard'));\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header/>\r\n                <SignupForm submit={this.submit} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSignupPage.propTypes = {\r\n    history: PropTypes.shape({\r\n        push: PropTypes.func.isRequired\r\n    }).isRequired,\r\n    signup: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, { signup })(SignupPage);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nconst UserRoute = ({ isAuthenticated, component: Component, ...rest }) => (\r\n    <Route {...rest} render={ props => \r\n        isAuthenticated ? <Component {...props} /> : <Redirect to=\"/\" /> }\r\n    />\r\n);\r\n\r\nUserRoute.propTypes = {\r\n    component: PropTypes.func.isRequired,\r\n    isAuthenticated: PropTypes.bool.isRequired\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        isAuthenticated: !!state.user.username\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(UserRoute);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nconst UserRoute = ({ isAuthenticated, component: Component, ...rest }) => (\r\n    <Route {...rest} render={ props => \r\n        !isAuthenticated ? <Component {...props} /> : <Redirect to=\"/dashboard\" /> }\r\n    />\r\n);\r\n\r\nUserRoute.propTypes = {\r\n    component: PropTypes.func.isRequired,\r\n    isAuthenticated: PropTypes.bool.isRequired\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        isAuthenticated: !!state.user.username\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(UserRoute);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport HomePage from './components/pages/HomePage';\r\nimport LoginPage from './components/pages/LoginPage';\r\nimport DashboardPage from './components/pages/DashboardPage';\r\nimport SignupPage from './components/pages/SignupPage';\r\nimport UserRoute from './components/routes/UserRoute';\r\nimport GuestRoute from './components/routes/GuestRoute';\r\n// import Header from './components/header/Header';\r\n\r\nconst App = ({ location }) => (\r\n    <Switch>\r\n        {/* <Header/> */}\r\n        <Route location={location} path=\"/\" exact component={HomePage} />\r\n        <GuestRoute location={location} path=\"/login\" exact component={LoginPage} />\r\n        <GuestRoute location={location} path=\"/signup\" exact component={SignupPage} />\r\n        <UserRoute location={location} path=\"/dashboard\" exact component={DashboardPage} />\r\n    </Switch>\r\n);\r\n\r\nApp.propTypes = {\r\n    location: PropTypes.shape({\r\n        pathname: PropTypes.string.isRequired\r\n    }).isRequired\r\n};\r\n\r\nexport default App;\r\n","/* eslint-disable */\r\n/* eslint-disable linebreak-style */\r\n// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import {\r\n    USER_LOGGED_IN,\r\n    USER_LOGGED_OUT,\r\n    USER_SUBMIT_RESULT\r\n} from \"../types/types\";\r\n\r\nvar initialState = {};\r\n\r\nexport default function user(state = initialState, action = {}) {\r\n    console.log('reducer', action);\r\n    switch (action.type) {\r\n        case USER_LOGGED_IN:\r\n            return action.user;\r\n        case USER_LOGGED_OUT:\r\n            return {};\r\n        case USER_SUBMIT_RESULT:\r\n            return action.user\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\n\r\nimport user from '../reducers/user';\r\n\r\nconst rootReducer = combineReducers({\r\n    user\r\n});\r\n\r\nexport default rootReducer;","import {applyMiddleware, createStore} from \"redux\";\r\nimport rootReducer from \"../reducers/rootReducer\";\r\nimport {composeWithDevTools} from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst store = createStore (\r\n    rootReducer,\r\n    composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { userLoggedIn } from './actions/authenticate';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport store from './store/store';\r\n\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport 'font-awesome/css/font-awesome.css';\r\nimport './App.css';\r\n\r\nif (localStorage.bookwormJWT) {\r\n    const user = { \r\n        token: localStorage.bookwormJWT, \r\n        username: localStorage.bookwormUser, \r\n        submitTest: localStorage.bookwormTest,\r\n        department: localStorage.department \r\n    };\r\n    store.dispatch(userLoggedIn(user));\r\n}\r\n\r\nReactDOM.render(<BrowserRouter>\r\n        <Provider store={store}>\r\n            <Route component={App}/>\r\n        </Provider>\r\n    </BrowserRouter>, \r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n","module.exports = __webpack_public_path__ + \"static/media/logocoopmartvn.f77b342b.png\";"],"sourceRoot":""}